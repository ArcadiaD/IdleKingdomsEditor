using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace IdleKingdomsEditor
{
    static class TileCosts
    {
        public static List<double> Values(int n)
        {
            var lastKnowRatio = KnownValues[KnownValues.Length - 1] / KnownValues[KnownValues.Length - 2];

            var tileCosts = Enumerable.Range(0, n + 2).Select(o => o < KnownValues.Length ? KnownValues[o] : KnownValues[KnownValues.Length - 1] * Math.Pow(lastKnowRatio, o - KnownValues.Length + 1)).ToList();

            return tileCosts;
        }

        public static readonly double[] KnownValues =
        {
            0,
            0,
            1,
            94,
            165,
            372,
            2_980,
            4_890,
            8_110,
            14_230,
            19_230,
            25_230,
            65_800,
            121_190,
            221_860,
            404_110,
            732_780,
            1_320_00,
            2_380_000,
            4_280_000,
            7_650_000,
            13_660_000,
            24_320_000,
            43_220_000,
            76_680_000,
            135_780_000,
            240_040_000,
            423_800_000,
            747_140_000,
            1_320_000_000,
            2_310_000_000,
            4_060_000_000,
            7_130_000_000,
            12_500_000_000,
            21_900_000_000,
            38_320_000_000,
            67_010_000_000,
            117_080_000_000,
            204_420_000_000,
            356_650_000_000,
            621_850_000_000,
            1_080_000_000_000,
            1_890_000_000_000,
            3_280_000_000_000,
            5_710_000_000_000,
            9_930_000_000_000,
            17_620_000_000_000,
            28_980_000_000_000,
            52_050_000_000_000,
            90_340_000_000_000,
            156_710_000_000_000,
            271_730_000_000_000,
            471_000_000_000_000,
            816_090_000_000_000,
            1_410_000_000_000_000,
            2_450_000_000_000_000,
            4_240_000_000_000_000,
            7_330_000_000_000_000,
            12_680_000_000_000_000,
            21_930_000_000_000_000,
            37_910_000_000_000_000,
            65_520_000_000_000_000,
            113_210_000_000_000_000,
            195_570_000_000_000_000,
            337_740_000_000_000_000,
            583_130_000_000_000_000,
            1_010_000_000_000_000_000,
            1_740_000_000_000_000_000,
            3_000_000_000_000_000_000,
            5_170_000_000_000_000_000,
            8_920_000_000_000_000_000,
            15_370_000_000_000_000_000,
            26_500_000_000_000_000_000d,
            45_680_000_000_000_000_000d,
            78_730_000_000_000_000_000d,
            135_640_000_000_000_000_000d,
            233_670_000_000_000_000_000d,
            402_470_000_000_000_000_000d,
            693_080_000_000_000_000_000d,
            1_190_000_000_000_000_000_000d,
            2_050_000_000_000_000_000_000d,
            3_540_000_000_000_000_000_000d,
            6_090_000_000_000_000_000_000d,
            10_470_000_000_000_000_000_000d,
            18_020_000_000_000_000_000_000d,
            30_990_000_000_000_000_000_000d,
            53_310_000_000_000_000_000_000d,
            91_670_000_000_000_000_000_000d,
            157_640_000_000_000_000_000_000d,
            271_030_000_000_000_000_000_000d,
            465_930_000_000_000_000_000_000d,
            800_880_000_000_000_000_000_000d,
            1_380_000_000_000_000_000_000_000d,
            2_370_000_000_000_000_000_000_000d,
        };

    }
}
